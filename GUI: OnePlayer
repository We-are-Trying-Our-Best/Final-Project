import javafx.application.Platform;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.stage.Modality;
import javafx.stage.Stage;
import java.util.ArrayList;

public class OnePlayer {

    static boolean correct = false;
    static Stage window;
    public static int playerScore = 0;

    public static void Display(String p1Name) {
        GridPane grid;
        Label catLabel, score;

        Scene scene;
        VBox layout1Player;

        grid = new GridPane();
        grid.setPadding(new Insets(10, 10, 10, 10));
        grid.setVgap(10);
        grid.setHgap(10);

        window = new Stage();
        window.initModality(Modality.NONE);
        window.setTitle("1 player: Categories");
        window.setMinWidth(400);

        final String IDLE_BUTTON_STYLE = "-fx-background-color: black;" +
                "-fx-text-fill: white;" +
                "-fx-border-style: solid inside;" +
                "-fx-border-width: 2;" +
                "-fx-border-insets: 0;" +
                "-fx-border-radius: 5;" +
                "-fx-border-color: #87CEFA;";
        final String HOVERED_BUTTON_STYLE = "-fx-background-color: black;" +
                "-fx-shadow-highlight-color: black;" +
                "-fx-text-fill: white;" +
                "-fx-border-style: solid inside;" +
                "-fx-border-width: 2;" +
                "-fx-border-insets: 0;" +
                "-fx-border-radius: 5;" +
                "-fx-border-color: #7CFC00";

        ArrayList<Integer> numberOrder = StartScreen.QuestionOrder();
        for (int k = 0; k < 10; k++) {
            int number = numberOrder.get(k);

            //Label catLabel: prompt to pick category (1 player)
            catLabel = new Label("Question " + (k + 1) + ": " + p1Name + ": Pick one of the following categories: ");
            catLabel.setFont(Font.font("Verdana", FontWeight.BOLD, 12));
            catLabel.setTextFill(Color.WHITE);
            final Button cat1 = new Button("Hypebeast");

            cat1.setStyle(IDLE_BUTTON_STYLE);
            cat1.setOnMouseEntered(e -> cat1.setStyle(HOVERED_BUTTON_STYLE));
            cat1.setOnMouseExited(e -> cat1.setStyle(IDLE_BUTTON_STYLE));

            cat1.setOnAction(e -> {
                window.hide();
                correct = Lauren.Display(number);
            });
            final Button cat2 = new Button("Memes");
            cat2.setStyle(IDLE_BUTTON_STYLE);
            cat2.setOnMouseEntered(e -> cat2.setStyle(HOVERED_BUTTON_STYLE));
            cat2.setOnMouseExited(e -> cat2.setStyle(IDLE_BUTTON_STYLE));

            cat2.setOnAction(e -> {
                window.hide();
                correct = Claire.Display(number);
            });
            final Button cat3 = new Button("Media");
            cat3.setStyle(IDLE_BUTTON_STYLE);
            cat3.setOnMouseEntered(e -> cat3.setStyle(HOVERED_BUTTON_STYLE));
            cat3.setOnMouseExited(e -> cat3.setStyle(IDLE_BUTTON_STYLE));

            cat3.setOnAction(e -> {
                window.hide();
                correct = Meagan.Display(number);
            });
            final Button cat4 = new Button("Science");
            cat4.setStyle(IDLE_BUTTON_STYLE);
            cat4.setOnMouseEntered(e -> cat4.setStyle(HOVERED_BUTTON_STYLE));
            cat4.setOnMouseExited(e -> cat4.setStyle(IDLE_BUTTON_STYLE));

            cat4.setOnAction(e -> {
                window.hide();
                correct = Lenice.Display(number);
            });

            if (correct) {
                playerScore += 1;
            }

            score = new Label(p1Name + "'s score: " + playerScore);
            score.setFont(Font.font("Verdana", FontWeight.BOLD, 12));
            score.setTextFill(Color.WHITE);
            //VBox layout1Player: sets vertical layout of buttons
            layout1Player = new VBox(20);
            layout1Player.getChildren().addAll(catLabel, cat1, cat2, cat3, cat4, score);

            layout1Player.setStyle("-fx-padding: 10;" +
                    "-fx-border-style: dotted;" +
                    "-fx-border-width: 2;" +
                    "-fx-border-insets: 5;" +
                    "-fx-border-radius: 5;" +
                    "-fx-border-color: #87CEFA;" +
                    "-fx-background-color: linear-gradient(to bottom, black, #191970);");
            scene = new Scene(layout1Player, 500, 350);
            window.setScene(scene);
            window.showAndWait();
        }

        Label pScore = new Label(p1Name + "'s score was " + playerScore);
        pScore.setFont(Font.font("Verdana", FontWeight.BOLD, 12));
        pScore.setTextFill(Color.WHITE);
        Label endMessage = new Label("Yayyyyy!!! You finished the game!" + "\n" + "Wanna play again?");
        endMessage.setFont(Font.font("Verdana", FontWeight.BOLD, 12));
        endMessage.setTextFill(Color.WHITE);

        final Button yesLoop = new Button("Play again");

        yesLoop.setStyle(IDLE_BUTTON_STYLE);
        yesLoop.setOnMouseEntered(e -> yesLoop.setStyle(HOVERED_BUTTON_STYLE));
        yesLoop.setOnMouseExited(e -> yesLoop.setStyle(IDLE_BUTTON_STYLE));

        yesLoop.setOnAction(e -> {
            window.close();
            Platform.runLater(() -> {
                try {
                    playerScore = 0;
                    new StartScreen().start(new Stage());
                }
                catch (Exception ex){
                    ex.printStackTrace();
                }
            });
        });
        final Button noLoop = new Button( "Exit game");

        noLoop.setStyle(IDLE_BUTTON_STYLE);
        noLoop.setOnMouseEntered(e -> noLoop.setStyle(HOVERED_BUTTON_STYLE));
        noLoop.setOnMouseExited(e -> noLoop.setStyle(IDLE_BUTTON_STYLE));

        noLoop.setOnAction(e -> {
            Platform.exit();
        });

        VBox endLayout = new VBox(20);
        endLayout.setAlignment(Pos.CENTER);
        endLayout.getChildren().addAll(pScore, endMessage, yesLoop, noLoop);
        endLayout.setStyle("-fx-padding: 10;" +
                "-fx-border-style: dotted;" +
                "-fx-border-width: 2;" +
                "-fx-border-insets: 5;" +
                "-fx-border-radius: 5;" +
                "-fx-border-color: #87CEFA;" +
                "-fx-background-color: linear-gradient(to bottom, black, #191970);");
        Scene scene1 = new Scene(endLayout, 500, 500);
        window.setScene(scene1);
        window.show();

    }
}
